{"version":3,"sources":["api/mock.server.js","App.js","index.js"],"names":["faker","seed","Card","img","name","price","style","height","width","border","margin","display","flexDirection","className","src","alt","App","loading","setLoading","useState","data","setData","useEffect","response","axios","get","concat","products","error","console","log","flexWrap","justifyContent","map","obj","index","key","image","createServer","serializers","application","RestSerializer","models","product","Model","routes","this","namespace","timing","resource","seeds","server","Array","forEach","_","create","id","random","uuid","commerce","productName","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"sNAGAA,IAAMC,KAAK,K,6BCCX,IAAIC,EAAO,IAA2B,IAA1B,IAAEC,EAAF,KAAOC,EAAP,MAAaC,GAAY,EACnC,OACE,yBACEC,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPC,OAAQ,kBACRC,OAAQ,SACRC,QAAS,OACTC,cAAe,UAEjBC,UAAU,QAEV,yBAAKP,MAAO,CAAEE,MAAO,SAAWM,IAAKX,EAAKY,IAAI,KAC9C,8BAAOX,GACP,wBAAIE,MAAO,CAAEI,OAAQ,UAAYL,KAIxB,SAASW,IACtB,IAAKC,EAASC,GAAcC,oBAAS,IAChCC,EAAMC,GAAWF,mBAAS,IAe/B,OAbAG,oBAAU,KACR,WACE,IACEJ,GAAW,GACX,IAAIK,QAAiBC,IAAMC,IAAI,iBAC/BP,GAAW,GACXG,EAAQD,EAAKM,OAAOH,EAASH,KAAKO,WAClC,MAAOC,GACPC,QAAQC,IAAI,WAPhB,IAUC,IAGD,yBAAKjB,UAAU,OACb,kDAAwBI,GAAW,4CAAnC,KACA,yBACEX,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPG,QAAS,OACTC,cAAe,MACfmB,SAAU,OACVC,eAAgB,UAElBnB,UAAU,aAETO,EAAKa,IAAI,CAACC,EAAKC,IAEZ,kBAACjC,EAAD,CACEkC,IAAKD,EACLhC,IAAK+B,EAAIG,MACTjC,KAAM8B,EAAI9B,KACVC,MAAO6B,EAAI7B,WDtDvBiC,YAAa,CACXC,YAAa,CACXC,YAAaC,KAGfC,OAAQ,CACNC,QAASC,KAGXC,SACEC,KAAKC,UAAY,MACjBD,KAAKE,OAAS,IACdF,KAAKG,SAAS,aAGhBC,MAAMC,GACJ,IAAIC,MAAM,KAAKC,QAASC,IACtBH,EAAOI,OAAO,UAAW,CACvBC,GAAIxD,IAAMyD,OAAOC,OACjBtD,KAAMJ,IAAM2D,SAASC,cACrBvB,MAAOrC,IAAMyD,OAAOpB,QACpBhC,MAAOL,IAAM2D,SAAStD,eEnBhC,MAAMwD,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAClD,EAAD,OAEF6C,I","file":"static/js/main.595d6a57.chunk.js","sourcesContent":["import { createServer, Model, RestSerializer } from \"miragejs\";\nimport faker from \"faker\";\n\nfaker.seed(123);\n\nexport default function setupMockServer() {\n  createServer({\n    serializers: {\n      application: RestSerializer\n    },\n\n    models: {\n      product: Model\n    },\n\n    routes() {\n      this.namespace = \"api\";\n      this.timing = 3000;\n      this.resource(\"products\");\n    },\n\n    seeds(server) {\n      [...Array(50)].forEach((_) => {\n        server.create(\"product\", {\n          id: faker.random.uuid(),\n          name: faker.commerce.productName(),\n          image: faker.random.image(),\n          price: faker.commerce.price()\n        });\n      });\n    }\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nlet Card = ({ img, name, price }) => {\n  return (\n    <div\n      style={{\n        height: \"180px\",\n        width: \"150px\",\n        border: \"1px solid black\",\n        margin: \"0.5rem\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      }}\n      className=\"card\"\n    >\n      <img style={{ width: \"145px\" }} src={img} alt=\"\" />\n      <span>{name}</span>\n      <h1 style={{ margin: \".2rem\" }}>{price}</h1>\n    </div>\n  );\n};\nexport default function App() {\n  let [loading, setLoading] = useState(false);\n  let [data, setData] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        let response = await axios.get(\"/api/products\");\n        setLoading(false);\n        setData(data.concat(response.data.products));\n      } catch (error) {\n        console.log(\"error\");\n      }\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1> Showcase Products {loading && <span>Loading...</span>} </h1>\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\"\n        }}\n        className=\"container\"\n      >\n        {data.map((obj, index) => {\n          return (\n            <Card\n              key={index}\n              img={obj.image}\n              name={obj.name}\n              price={obj.price}\n            />\n          );\n        })}\n        {/* or */}\n        {/* {\n          data.map(({image,name,price})=>{\n            return <Card name={name} img={image} price={price}/>\n          })\n        } */}\n      </div>\n\n      {/* <Card/> */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport setupMockServer from \"./api/mock.server\";\n\nimport App from \"./App\";\n\nsetupMockServer();\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}